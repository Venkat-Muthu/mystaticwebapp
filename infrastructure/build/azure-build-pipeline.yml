# # Starter pipeline
# # Start with a minimal pipeline that you can customize to build and deploy your code.
# # Add steps that build, run tests, deploy, and more:
# # https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

# steps:
# - script: echo Hello, world!
#   displayName: 'Run a one-line script'

# - script: |
#     echo Add other tasks to build, test, and deploy your project.
#     echo See https://aka.ms/yaml
#   displayName: 'Run a multi-line script'

stages:
- stage: PredefinedVariablesValue
  jobs:
  - job: EchoVariablesValue
    steps:
    - script : |
        echo "Build variables (DevOps Services)"
        echo "Agent.HomeDirectory : $(Agent.HomeDirectory)"
        echo "Agent.Id : $(Agent.Id)"
        echo "Agent.JobName : $(Agent.JobName)"
        echo "Agent.JobStatus : $(Agent.JobStatus)"
        echo "Agent.MachineName : $(Agent.MachineName)"
        echo "Agent.Name : $(Agent.Name)"
        echo "Agent.OS : $(Agent.OS)"
        echo "Agent.OSArchitecture : $(Agent.OSArchitecture)"
        echo "Agent.TempDirectory : $(Agent.TempDirectory)"
        echo "Agent.ToolsDirectory : $(Agent.ToolsDirectory)"
        echo "Agent.WorkFolder : $(Agent.WorkFolder)"
        echo ""

        echo "Build variables (DevOps Services)"
        echo "Agent.BuildDirectory : $(Agent.BuildDirectory)"
        echo "Build.BuildId : $(Build.BuildId)"
        echo "Build.BuildNumber : $(Build.BuildNumber)"
        echo "Build.BuildUri : $(Build.BuildUri)"
        echo "Build.BinariesDirectory : $(Build.BinariesDirectory)"
        echo "Build.ContainerId : $(Build.ContainerId)"
        echo "Build.DefinitionName : $(Build.DefinitionName)"
        echo "Build.DefinitionVersion : $(Build.DefinitionVersion)"
        echo "Build.QueuedBy : $(Build.QueuedBy)"
        echo "Build.QueuedById : $(Build.QueuedById)"
        echo "Build.Reason : $(Build.Reason)"
        echo "Build.Repository.Clean : $(Build.Repository.Clean)"
        echo "Build.Repository.LocalPath : $(Build.Repository.LocalPath)"
        echo "Build.Repository.ID : $(Build.Repository.ID)"
        echo "Build.Repository.Name : $(Build.Repository.Name)"
        echo "Build.Repository.Provider : $(Build.Repository.Provider)"
        echo "Build.Repository.Tfvc.Workspace : $(Build.Repository.Tfvc.Workspace)"
        echo "Build.Repository.Uri : $(Build.Repository.Uri)"
        echo "Build.RequestedFor : $(Build.RequestedFor)"
        echo "Build.RequestedForEmail : $(Build.RequestedForEmail)"
        echo "Build.RequestedForId : $(Build.RequestedForId)"
        echo "Build.SourceBranch : $(Build.SourceBranch)"
        echo "Build.SourceBranchName : $(Build.SourceBranchName)"
        echo "Build.SourcesDirectory : $(Build.SourcesDirectory)"
        echo "Build.SourceVersion : $(Build.SourceVersion)"
        echo "Build.SourceVersionMessage : $(Build.SourceVersionMessage)"
        echo "Build.StagingDirectory : $(Build.StagingDirectory)"
        echo "Build.Repository.Git.SubmoduleCheckout : $(Build.Repository.Git.SubmoduleCheckout)"
        echo "Build.SourceTfvcShelveset : $(Build.SourceTfvcShelveset)"
        echo "Build.TriggeredBy.BuildId : $(Build.TriggeredBy.BuildId)"
        echo "Build.TriggeredBy.DefinitionId : $(Build.TriggeredBy.DefinitionId)"
        echo "Build.TriggeredBy.DefinitionName : $(Build.TriggeredBy.DefinitionName)"
        echo "Build.TriggeredBy.BuildNumber : $(Build.TriggeredBy.BuildNumber)"
        echo "Build.TriggeredBy.ProjectID : $(Build.TriggeredBy.ProjectID)"
        echo "Common.TestResultsDirectory : $(Common.TestResultsDirectory)"
        echo ""

        echo "Pipeline variables (DevOps Services)"
        echo "Pipeline.Workspace : $(Pipeline.Workspace)"
        echo "Deployment job variables (DevOps Services)"
        echo "Environment.Name : $(Environment.Name)"
        echo "Environment.Id : $(Environment.Id)"
        echo "Environment.ResourceName : $(Environment.ResourceName)"
        echo "Environment.ResourceId : $(Environment.ResourceId)"
        echo "Strategy.Name : $(Strategy.Name)"
        echo "Strategy.CycleName : $(Strategy.CycleName)"
        echo ""

        echo "System variables (DevOps Services)"
        echo "System.AccessToken : $(System.AccessToken)"
        echo "System.CollectionId : $(System.CollectionId)"
        echo "System.CollectionUri : $(System.CollectionUri)"
        echo "System.DefaultWorkingDirectory : $(System.DefaultWorkingDirectory)"
        echo "System.DefinitionId : $(System.DefinitionId)"
        echo "System.HostType : $(System.HostType)"
        echo "System.JobAttempt : $(System.JobAttempt)"
        echo "System.JobDisplayName : $(System.JobDisplayName)"
        echo "System.JobId : $(System.JobId)"
        echo "System.JobName : $(System.JobName)"
        echo "System.PhaseAttempt : $(System.PhaseAttempt)"
        echo "System.PhaseDisplayName : $(System.PhaseDisplayName)"
        echo "System.PhaseName : $(System.PhaseName)"
        echo "System.StageAttempt : $(System.StageAttempt)"
        echo "System.StageDisplayName : $(System.StageDisplayName)"
        echo "System.StageName : $(System.StageName)"
        echo "System.PullRequest.IsFork : $(System.PullRequest.IsFork)"
        echo "System.PullRequest.PullRequestId : $(System.PullRequest.PullRequestId)"
        echo "System.PullRequest.PullRequestNumber : $(System.PullRequest.PullRequestNumber)"
        echo "System.PullRequest.SourceBranch : $(System.PullRequest.SourceBranch)"
        echo "System.PullRequest.SourceRepositoryURI : $(System.PullRequest.SourceRepositoryURI)"
        echo "System.PullRequest.TargetBranch : $(System.PullRequest.TargetBranch)"
        echo "System.TeamFoundationCollectionUri : $(System.TeamFoundationCollectionUri)"
        echo "System.TeamProject : $(System.TeamProject)"
        echo "System.TeamProjectId : $(System.TeamProjectId)"
        echo "TF_BUILD : $(TF_BUILD)"
        echo ""

        echo "Checks variables (DevOps Services)"
        echo "Checks.StageAttempt : $(Checks.StageAttempt)"
        # echo " : $()"
        # echo " : $()"
        # echo " : $()"
        # echo " : $()"
        # echo " : $()"
        # echo " : $()"
        # echo " : $()"s
        echo "Build ArtifactStagingDirectory : $(Build.ArtifactStagingDirectory)"

- stage: Build
  jobs:
  - job: BuildJob
    steps:
    - script: echo Building!
    - task: Bash@3
      inputs:
        targetType: inline
        script: |
          echo 'getting current datetime' 
          currentDate=`date +"%Y-%m-%d %T"`;
          echo "currentDate : $currentDate"
          echo 'getting current directory files' 
          ls
          echo 'changing directory to src'
          cd src
          echo 'executing sed'
          sed -i "s/datetimeplaceholder/$currentDate/" index.html
                    
          echo 'displaying content of index.html'
          cat index.html

- stage: Test
  jobs:
  - job: TestOnWindows
    steps:
    - script: echo Testing on Windows!
    - script: type $(System.DefaultWorkingDirectory)/src/index.html
  - job: TestOnLinux
    steps:
    - script: echo Testing on Linux!
- stage: PublishArtifact
  jobs:
  - job: Publish
    steps:
    - script: echo Publishing the artifact!
    
    - script: type $(System.DefaultWorkingDirectory)/src/index.html
    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: $(System.DefaultWorkingDirectory)/src/
        artifactName: 'drop'
